// statement.proto
//
// Definition of statements for The Attribute Management Language (TAML)
//
syntax = "proto3";

message Key {
   string csi = 1;
   string publicKey = 2;
}
message Attribute {
  string group = 1;
  string networkRole = 2;
  string friendlyName = 3;
}
message While {
  string afterTime = 1;   // should this be string or binary time?
  string beforeTime = 2;
  string locationRange = 3;
}
message Has {
  repeated Attribute attribute = 1;
}
message Attest {
  string says = 1; // UAID string for speaking public key
  string this = 2; // UAID string for target of attestation/assignment
  message Has {
    repeated Attribute attribute = 1;
  }
  Has has = 3;     // list of attributes
  While while = 4;
  string signed = 5; // opaque string using signature algorithm of
                              // speaking public key (from csi)
}
message AttributeRange {
  string groupRange = 1;
  string networkRoleRange = 2
  string friendlyNameRange = 3;
}
message Delegate {
  string says = 1;      // UAID octets for speaking public key
  string this = 2;      // UAID octets for target of delegation
  string speaksFor = 3; // UAID of root, speaker assumed if not included
  message SpeaksAbout {
    repeated AttributeRange attributerange = 1;
  }
  SpeaksAbout speaksabout = 6;  // list of attribute ranges
  While while = 4;
  string signed = 5;  // opaque string of digital signature of
                               // speaking public key
}
message Represent {
  string says = 1; // UAID string for speaking public key
  string as = 6;   // UAID of represented key
  string this = 2; // UAID string for target of attestation/assignment
  Has has = 3;     // list of attributes
  While while = 4;
  string signed = 5; // opaque string using signature algorithm of
                              // speaking public key (from keyâ€™s csi)
}
message Statement {
  Key key = 1;
  Attest attest = 2;
  Delegate delegate = 3;
  Represent represent = 4;
}
